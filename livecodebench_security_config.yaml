# LiveCodeBench Security Configuration
# Defines security policies for sandbox execution

# Docker Security Settings
docker:
  # Resource limits
  resources:
    memory_limit: "512m"          # Maximum memory per container
    memory_swap: "512m"           # Total memory + swap (same as memory to disable swap)
    cpu_quota: 50000              # CPU quota (50% of one CPU)
    cpu_period: 100000            # CPU period for quota calculation
    pids_limit: 50                # Maximum number of processes
    
  # Security options
  security:
    read_only_rootfs: true        # Make root filesystem read-only
    no_new_privileges: true       # Prevent privilege escalation
    drop_capabilities:            # Drop all capabilities except essential ones
      - ALL
    add_capabilities: []          # No additional capabilities needed
    
  # Network isolation
  network:
    mode: "none"                  # No network access
    dns: []                       # No DNS servers
    
  # Storage restrictions
  storage:
    tmpfs:                        # Use tmpfs for temporary files
      /tmp:
        size: "100m"
        mode: "1777"
      /var/tmp:
        size: "50m"
        mode: "1777"
    volumes: []                   # No persistent volumes
    
  # Runtime security
  runtime:
    user: "sandbox:sandbox"       # Run as non-root user
    working_dir: "/workspace"     # Restricted working directory
    env:                          # Minimal environment variables
      - "PATH=/usr/local/bin:/usr/bin:/bin"
      - "PYTHONDONTWRITEBYTECODE=1"
      - "PYTHONUNBUFFERED=1"

# Process-based Sandbox (fallback when Docker unavailable)
process:
  # Resource limits using setrlimit
  limits:
    cpu_seconds: 30               # CPU time limit
    memory_mb: 512                # Virtual memory limit
    file_size_mb: 100             # Maximum file size
    open_files: 50                # Maximum open files
    processes: 50                 # Maximum processes
    
  # Restricted system calls (using seccomp if available)
  seccomp:
    default_action: "allow"       # Default action for syscalls
    blocked_syscalls:             # Explicitly blocked system calls
      - "mount"
      - "umount"
      - "ptrace"
      - "swapon"
      - "swapoff"
      - "reboot"
      - "settimeofday"
      - "sethostname"
      - "setdomainname"
      - "iopl"
      - "ioperm"
      - "create_module"
      - "init_module"
      - "delete_module"
      - "get_kernel_syms"
      - "query_module"
      - "quotactl"
      - "nfsservctl"
      - "getpmsg"
      - "putpmsg"
      - "afs_syscall"
      - "tuxcall"
      - "security"
      - "gettid"
      - "readahead"
      - "setxattr"
      - "lsetxattr"
      - "fsetxattr"
      - "getxattr"
      - "lgetxattr"
      - "fgetxattr"
      - "listxattr"
      - "llistxattr"
      - "flistxattr"
      - "removexattr"
      - "lremovexattr"
      - "fremovexattr"
      - "tkill"
      - "time"
      - "futex"
      - "sched_setaffinity"
      - "sched_getaffinity"
      
# Code Execution Policies
execution:
  # Language-specific settings
  languages:
    python:
      interpreter: "/usr/local/bin/python"
      flags: ["-B", "-s", "-u", "-I"]  # -I for isolated mode
      restricted_modules:         # Modules to block via import hooks
        - "os"
        - "sys"
        - "subprocess"
        - "socket"
        - "urllib"
        - "requests"
        - "importlib"
        - "__builtins__"
        
    cpp:
      compiler: "/usr/bin/g++"
      compile_flags: ["-std=c++17", "-O2", "-Wall", "-Wextra", "-fno-asm", "-fno-access-control"]
      link_flags: ["-static", "-s"]  # Static linking, strip symbols
      
    java:
      compiler: "/usr/bin/javac"
      runtime: "/usr/bin/java"
      security_manager: true      # Enable Java Security Manager
      policy_file: "/etc/java.policy"
      
  # Input/Output restrictions
  io:
    max_stdin_size: "10MB"        # Maximum input size
    max_stdout_size: "10MB"       # Maximum output size
    max_stderr_size: "1MB"        # Maximum error output
    timeout_seconds: 30           # Execution timeout
    
  # File system restrictions
  filesystem:
    allowed_paths:                # Only these paths are accessible
      - "/workspace"
      - "/tmp"
    read_only_paths:              # Read-only access
      - "/usr"
      - "/bin"
      - "/lib"
    blocked_paths:                # Completely blocked
      - "/proc"
      - "/sys"
      - "/dev"
      - "/etc"
      - "/home"
      - "/root"
      
# Monitoring and Logging
monitoring:
  # Execution logging
  logging:
    enabled: true
    level: "INFO"
    format: "json"
    fields:
      - "timestamp"
      - "container_id"
      - "language"
      - "execution_time"
      - "memory_used"
      - "exit_code"
      - "error_type"
      
  # Metrics collection
  metrics:
    enabled: true
    collect_interval: "1s"
    metrics:
      - "cpu_usage"
      - "memory_usage"
      - "io_operations"
      - "syscall_count"
      
  # Alerting thresholds
  alerts:
    high_cpu_usage: 80           # Alert if CPU > 80%
    high_memory_usage: 90         # Alert if memory > 90%
    long_execution: 25            # Alert if execution > 25s
    suspicious_syscalls: true     # Alert on suspicious system calls
    
# Security Hardening
hardening:
  # Container image settings
  image:
    scan_vulnerabilities: true    # Scan images for vulnerabilities
    update_frequency: "weekly"    # Update base images weekly
    allowed_registries:           # Only pull from trusted registries
      - "docker.io"
      - "gcr.io"
      
  # Host security
  host:
    kernel_modules_blacklist:     # Kernel modules to blacklist
      - "kvm"
      - "vhost_net"
      - "vhost_scsi"
      - "vhost_vsock"
      
  # Additional restrictions
  additional:
    disable_core_dumps: true      # Prevent core dumps
    clear_env_vars: true          # Clear environment variables
    randomize_tmp_names: true     # Randomize temporary file names